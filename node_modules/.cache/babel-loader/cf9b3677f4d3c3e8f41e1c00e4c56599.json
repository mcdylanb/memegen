{"ast":null,"code":"var _jsxFileName = \"/home/admin/Desktop/memegen/src/Components/Generator.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nconst url = \"https://api.imgflip.com/get_memes\";\n\nrequire(\"dotenv\").config();\n\nconsole.log(process.env);\nexport default class Generator extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst objectToQueryParam = obj => {\n  const params = Object.entries(obj).map(([key, value]) => `${key}=${value}`);\n  return \"?\" + params.join(\"&\");\n};\n\nconst App = () => {\n  const [picture, setPicture] = useState(\"\");\n  const [dummy, setDummy] = useState([]);\n  const [topText, SetTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n  const [naniiii, setNaniiii] = useState(\"https://i.imgflip.com/46a7zi.jpg\");\n  useEffect(() => {\n    axios.get(url).then(response => setPicture(response.data.data.memes));\n  }, []);\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const randNum = Math.floor(Math.random() * picture.length);\n      setDummy(picture[randNum].url);\n      const params = {\n        template_id: picture[randNum].id,\n        text0: topText,\n        text1: bottomText,\n        username: process.env.REACT_APP_IMGFLIP_USERNAME,\n        password: process.env.REACT_APP_IMGFLIP_PASSWORD\n      };\n      const response = await fetch(`https://api.imgflip.com/caption_image${objectToQueryParam(params)}`);\n      const json = await response.json();\n      const magic = json.data.url;\n      setNaniiii(magic);\n      console.log(\"why\", params);\n    } catch (error) {}\n  };\n\n  function save2() {\n    var gh = naniiii;\n    var a = document.createElement(\"a\");\n    a.href = gh;\n    a.download = \"image.png\";\n    a.click();\n  }\n\n  if (!picture) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"invert\",\n    src: require(\"./loading-png-gif.gif\"),\n    alt: \"loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nai\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"nainput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"GENERATE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nai\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"nainput\",\n    type: \"text\",\n    name: \"topText\",\n    placeholder: \"Top Text\",\n    value: topText,\n    onChange: e => SetTopText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nai noy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"nainput\",\n    type: \"text\",\n    name: \"bottomText\",\n    placeholder: \"Bottom Text\",\n    value: bottomText,\n    onChange: e => setBottomText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nai sasdnai \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: save2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gamay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: naniiii,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"The site loads like shit by the way\"))));\n};","map":{"version":3,"sources":["/home/admin/Desktop/memegen/src/Components/Generator.js"],"names":["React","useState","useEffect","Component","axios","url","require","config","console","log","process","env","Generator","render","objectToQueryParam","obj","params","Object","entries","map","key","value","join","App","picture","setPicture","dummy","setDummy","topText","SetTopText","bottomText","setBottomText","naniiii","setNaniiii","get","then","response","data","memes","handleSubmit","e","preventDefault","randNum","Math","floor","random","length","template_id","id","text0","text1","username","REACT_APP_IMGFLIP_USERNAME","password","REACT_APP_IMGFLIP_PASSWORD","fetch","json","magic","error","save2","gh","a","document","createElement","href","download","click","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport axios from \"axios\";\nconst url = \"https://api.imgflip.com/get_memes\";\n\nrequire(\"dotenv\").config();\n\nconsole.log(process.env);\nexport default class Generator extends Component {\n  render() {\n    return (\n      <div>\n        <App />\n      </div>\n    );\n  }\n}\n\nconst objectToQueryParam = (obj) => {\n  const params = Object.entries(obj).map(([key, value]) => `${key}=${value}`);\n  return \"?\" + params.join(\"&\");\n};\n\nconst App = () => {\n  const [picture, setPicture] = useState(\"\");\n  const [dummy, setDummy] = useState([]);\n  const [topText, SetTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n  const [naniiii, setNaniiii] = useState(\"https://i.imgflip.com/46a7zi.jpg\");\n\n  useEffect(() => {\n    axios.get(url).then((response) => setPicture(response.data.data.memes));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      const randNum = Math.floor(Math.random() * picture.length);\n      setDummy(picture[randNum].url);\n\n      const params = {\n        template_id: picture[randNum].id,\n        text0: topText,\n        text1: bottomText,\n        username: process.env.REACT_APP_IMGFLIP_USERNAME,\n        password: process.env.REACT_APP_IMGFLIP_PASSWORD,\n      };\n      const response = await fetch(\n        `https://api.imgflip.com/caption_image${objectToQueryParam(params)}`\n      );\n      const json = await response.json();\n      const magic = json.data.url;\n      setNaniiii(magic);\n\n      console.log(\"why\", params);\n    } catch (error) {}\n  };\n\n  function save2() {\n    var gh = naniiii;\n\n    var a = document.createElement(\"a\");\n    a.href = gh;\n    a.download = \"image.png\";\n\n    a.click();\n  }\n  if (!picture)\n    return (\n      <div className=\"container\">\n        <img\n          className=\"invert\"\n          src={require(\"./loading-png-gif.gif\")}\n          alt=\"loading...\"\n        />\n      </div>\n    );\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <div className=\"form\">\n          <div className=\"nai\">\n            <button className=\"nainput\">GENERATE</button>\n          </div>\n          <div className=\"nai\">\n            <input\n              className=\"nainput\"\n              type=\"text\"\n              name=\"topText\"\n              placeholder=\"Top Text\"\n              value={topText}\n              onChange={(e) => SetTopText(e.target.value)}\n            />\n          </div>\n          <div className=\"nai noy\">\n            <input\n              className=\"nainput\"\n              type=\"text\"\n              name=\"bottomText\"\n              placeholder=\"Bottom Text\"\n              value={bottomText}\n              onChange={(e) => setBottomText(e.target.value)}\n            />\n          </div>\n        </div>\n      </form>\n      <div className=\"nai sasdnai \">\n        <button onClick={save2}>Save</button>\n      </div>\n\n      <div className=\"gamay\">\n        <div className=\"meme\">\n          <img src={naniiii} alt=\"\" />\n          <p>The site loads like shit by the way</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}